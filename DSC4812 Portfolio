*Selected series: Turnover of Department Stores for New South Wales, Australia
*Copied collumn and dates to new Excel sheet, then use to import to R

#Import packages and libraries

library(fpp3)
install.packages('readx1')
data <- readxl ::read_excel('portfolio_data.xlsx')

#Create tsibble with Month as index

data1 <- data %>%
    mutate(Month = yearmonth(Month)) %>%
    as_tsibble(index = Month)
    
head(data1)

#Limit dataset from 2000 onwards

data1 <- data1 %>%
    filter(year(Month) >=2000)
autoplot(data1)    

#Look at changes between years for seasonal spikes

data1 %>%
    gg_season(Turnover, labels = "both") +
    labs(y = "$ (millions)",
         title = "Seasonal plot: Turnover of Department Stores")
         
 data1 %>% 
    gg_season(Turnover, period = "year") +
    labs(y="$ (millions)", title="Department Store Turnover")        

#Look at yearly increase for each month

data1 %>%
    gg_subseries(Turnover) +
    labs(y="$ (millions)", title="Department Store Turnover")
    
#Look at autocorrelation within the lags

data1 %>%
    gg_lag(Turnover, geom = "point") +
    labs(x = 'lag(Turnover, k)')

data1 %>%
    ACF(Turnover, lag_max = 48) %>%
    autoplot()

TRAIN MODEL

data_train <- data1 %>%
    filter(year(Month) < 2015)
    
autoplot(data1, Turnover) + 
    autolayer(data_train, Turnover, colour = "red")    

FORECAST

fit <- data_train %>%
    model(SNAIVE(Turnover ~ lag("year")))
    
fit %>% gg_tsresiduals()

print(fit)

fc <- fit %>%
    forecast(new_data = anti_join(data1, data_train))
fc %>% autoplot(data1)

fit %>% accuracy()
fc %>% accuracy(data1)

fit1 %>% 
    gg_tsresiduals() + 
    labs(title = 'Residual Plots from the SNaive method')

fit1 %>% augment() %>% features(.resid, box_pierce, lag=24, dof=0)

augment(fit1) %>% features(.resid, ljung_box, lag=24, dof=0)

MOVING AVERAGES

data_train2 <- data_train %>%
    mutate(
        '5-MA' = slider::slide_dbl(Turnover, mean,
                                  .before = 2, .after = 2, .complete=TRUE),
        '12-MA' = slider::slide_dbl(Turnover, mean,
                                   .before = 1, .after = 6, .complete = TRUE),
        '2x12-MA' = slider::slide_dbl('12-MA', mean,
                                     .before = 1, .after = 0, .complete = TRUE)
    )

print(data_train2)

data_train2 %>%
    as_tsibble() %>%
    filter(year(Month) >= 2002) %>%
    autoplot(Turnover, colour='grey') +
    geom_line(aes(y='5-MA'), colour = 'red') +
    labs(
        y='Turnover', title='Turnover of Department Sales')

REGRESSION

reg_fit <- data_train %>%
    model(TSLM((Turnover) ~ trend() + season())) %>%
report()

autoplot(data_train, Turnover)+
autolayer(aug1, .fitted, colour='red')+
labs(title = 'Department Store Turnover with Fitted Values from Regression Model',
     y ='Turnover & Fitted Values' , x = 'Month')+
guides(colour = guide_legend(title='PLots'))

reg_fc <- reg_fit %>% forecast(h = '6 years')

reg_fc %>%
    autoplot(data_train, level=NULL) +
    autolayer(
        filter_index(data1, '2015' ~.),
        colour='grey') +  
    labs(title='Turnover projection with Regression')
    
reg_fit %>% glance()

ETS

ets_fit <- data_train %>%
    model(ETS(Turnover))
report(ets_fit)

ets_fit <- data_train %>%
    model(additive = ETS(Turnover ~ error("A") + trend("A") + season("A")),
         multiplicative = ETS(Turnover ~ error("M") + trend("A") + season("M")),
         damped = ETS(Turnover ~ error("M") + trend("Ad") + season("M")),
         auto = ETS(Turnover))
         
aug_ets <- augment(ets_fit)

autoplot(data_train, Turnover)+
autolayer(aug_ets, .fitted)+
labs(title = 'Department Store Turnover with Fitted Values from ETS Model',
     y ='Turnover & Fitted Values' , x = 'Month')+
guides(colour = guide_legend(title="Model"))

glance(ets_fit)
#report(ets_fit

DECOMPOSITION

#dcmp <- data_train %>%
#    model(stl = STL(Turnover))
#components(dcmp)

components(dcmp) %>% autoplot

components(dcmp) %>%
    as_tsibble() %>%
    autoplot(Turnover, colour='grey') +
    geom_line(aes(y=season_adjust), colour = 'red') +
    labs(
        y='Turnover)', title='Turnover of Department Sales')

mult_dcmp <- 
data_train %>%
    model(classical_decomposition(Turnover, type ='multiplicative')) %>%
    components() #%>%
#    autoplot() +
#    labs(title =
#        "Decomposition of AUS Department Sales using Additive Method")

mult_dcmp %>%
    ggplot(aes(x = Month)) +
    geom_line(aes(y = Turnover, colour = "Data")) +
    geom_line(aes(y = season_adjust,
                 colour = "Seasonally Adjusted")) +
    geom_line(aes(y = trend, colour = "Trend")) +
    labs(y = 'Turnover',
        title ='Turnover with Multiplicative Decomposition') +
    scale_colour_manual(
        values = c("grey", "red", "blue"),
        breaks = c("Data", "Seasonally Adjusted", "Trend")
)

gg_
