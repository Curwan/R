library(fpp3)
str(global_economy)
unique(global_economy['Country'])

canada_econ <- global_economy %>%
  filter(Country=="Canada")
  #summarise(Exports)

canada_econ %>%
  autoplot(Exports) +
    labs(y = '% of GDP', title = 'Exports: Canada')

train <- canada_econ %>%
  filter(Year<='2012')

fit <- train %>%
  model(ETS(Exports ~ error("A") + trend("N") + season("N")))
fc <- fit %>%
  forecast(h=5)

fc %>%
    autoplot(canada_econ) +
    geom_line(aes(y = .fitted), col="#D55E00",
             data = augment(fit)) +
    labs(y="% of GDP", title = "Exports: Canada") +
    guides(colour = FALSE)
 
accuracy(fit)

fit1 <- train %>%
    model(ETS(Exports ~ error("A") + trend("A") + season ("N")))
accuracy(fit1)

fc1 <- fit1 %>%
    forecast(h=5)
    
fc1 %>%
    autoplot(canada_econ) +
    geom_line(aes(y = .fitted), col="red",
             data = augment(fit1)) +
    labs(y="% of GDP", title = "Exports: Canada") +
    guides(colour = FALSE)

fit %>%
gg_tsresiduals()

fit1 %>%
gg_tsresiduals()

#Prediction Intervals
report(fit)
report(fit1)
__________________________________________________________________________________________
library(fpp3)

unique(aus_arrivals$Origin)

trips <- aus_arrivals %>%
  filter(Origin=="NZ") %>%
  select(Arrivals)
  #index_by(Quarter)???

trips %>%
  autoplot(Arrivals)

#Do decomposition to see what pattern lies in the errors.
trips %>%
  model(classical_decomposition(Arrivals, type ='multiplicative')) %>%
  components() %>%
  autoplot()

train <- trips %>%
  filter_index(~'2010 Q3')

fit_train <- train %>%
  model(hw = ETS(Arrivals ~ error("M") + trend("A") + season("M")))

fc <- fit_train %>%
  forecast(h=8)

fc %>%
  autoplot(train, level=NULL)+
  autolayer(
    filter_index(trips, '2010 Q4' ~ .), colour = 'black')
 
#Partition into recent data for graph readibility 
trips2 <- trips %>%
    filter(year(Quarter) >= '2004 Q1') %>%
    summarise(Arrivals=log(Arrivals))

fc1 <- train %>%
  model(ETS(Arrivals ~ error("M") + trend("N") + season("N"))) %>%
  forecast(h=8)

fc1 %>%
  autoplot(trips2, level=NULL)+
  autolayer(
    filter_index(train, '2010 Q4' ~ .), colour = 'black')+
    labs(title='Model 1 with ETS(M,N,N) forecast')

train2 <- train %>%
  summarise(Arrivals = log(Arrivals))

fc2 <- train2 %>%  
  model(additive = ETS(Arrivals ~ error("A") + trend("A") + season("A"))) %>%
  forecast(h=8)

fc2 %>%
  autoplot(trips2, level=NULL)+
  autolayer(
    filter_index(train2, '2010 Q4' ~ .), colour = 'black')+
    labs(title='Model 2 with Additive HW forecast to log transformation')

fc3 <- train %>%
  model(SNAIVE(Arrivals ~ lag("year"))) %>%
  forecast(h=8)

fc3 %>%
  autoplot(trips2, level=NULL)+
  autolayer(
    filter_index(train, '2010 Q4' ~ .), colour = 'black')+
    labs(title='Model 3 with SNAIVE) forecast')

comp <- train2 %>%
  model(STL(Arrivals ~ trend(window = 7) + season(window='periodic'),
  robust=TRUE)) %>%
  components()

adjusted <- comp %>%  
  mutate(Arrivals = season_adjust) %>%
  select(Arrivals)

fc4 <- adjusted %>%
  model(ETS(Arrivals ~ error("M") + trend("N") + season("N"))) %>%
  forecast(h=8)

fc4 %>%
  autoplot(trips2, level=NULL)+
  autolayer(
    filter_index(train2, '2010 Q4' ~ .), colour = 'black')+
    labs(title='Model 4 with ETS(M,N,N) forecast to log transformation')

test_all <- fc %>%
  mutate(fc1, fc2, fc3, fc5)

best_fc %>%
gg_tsresiduals()


Cross-Validation training
cross_train <- trips %>%
stretch_tsibble(.init=3, .step=1)

#MODEL1
cross_fit1 <- cross_train %>%
  model(ETS(Arrivals ~ error("M") + trend("N") + season("N")))
  
cross_fc1 <- cross_fit1 %>%
forecast(h=1)

cross_fc1 %>% accuracy(trips)
fc1 %>% accuracy(trips)

#MODEL2
log_all <- trips %>%
summarise(Arrivals=log(Arrivals))

cross_train2 <- log_all %>%
stretch_tsibble(.init=3, .step=1)

cross_fit2 <- cross_train2 %>%
  model(ETS(additive = ETS(Arrivals ~ error("A") + trend("A") + season("A")))
   
cross_fc2 <- cross_fit2 %>%
forecast(h=1)

cross_fc2 %>% accuracy(trips2)
fc2 %>% accuracy(train2)

#MODEL3
cross_fit3 <- cross_train %>%
  model(SNAIVE(Arrivals ~ lag("year")))

cross_fc3 <- cross_fit3 %>%
  forecast(h=1)
  
cross_fc3 %>% accuracy(trips)
fc3 %>% accuracy(trips)

#MODEL4
comp1 <- log_all %>%
  model(STL(Arrivals ~ trend(window = 7) + season(window='periodic'),
  robust=TRUE)) %>%
  components()

adjusted1 <- comp1 %>%  
  mutate(Arrivals = season_adjust) %>%
  select(Arrivals)

cross_fit4 <- adjusted1 %>%
  model(ETS(Arrivals ~ error("M") + trend("N") + season("N")))
  
cross_fc4 <- cross_fit4 %>%
  forecast(h=1)
  
cross_fc4 %>% accuracy(log_all)
fc4 %>% accuracy(trips2) 
